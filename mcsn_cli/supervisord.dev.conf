; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Quotes around values are not supported, except in the case of
;    the environment= options as shown below.
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
;  - Command will be truncated if it looks like a config file comment, e.g.
;    "command=bash -c 'foo ; bar'" will truncate to "command=bash -c 'foo ".
;
; Warning:
;  Paths throughout this example file use /tmp because it is available on most
;  systems.  You will likely need to change these to locations more appropriate
;  for your system.  Some systems periodically delete older files in /tmp.
;  Notably, if the socket file defined in the [unix_http_server] section below
;  is deleted, supervisorctl will be unable to connect to supervisord.

[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=0            ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
prompt=mcsn_supervisorctl    ; cmd line prompt (default "supervisor")


[program:mcsn_api]
command=../mcsn_api/sentry     ; the program (relative uses PATH, can take args)
directory=../mcsn_api          ; directory to cwd to before exec (def no cwd)
autostart=false                ; start at supervisord start (default: true)
startretries=0                 ; never retry starting the service
startsecs=10                   ; rough estimate of how long initial boot takes
stopwaitsecs=2                 ; estimated time to shutdown before forcing a SIGKILL
stopasgroup=true               ; send stop signal to the UNIX process group (default false)
killasgroup=true               ; SIGKILL the UNIX process group (def false)

[program:mcsn_runs]
command=mix phx.server         ; the program (relative uses PATH, can take args)
directory=../mcsn_runs         ; directory to cwd to before exec (def no cwd)
autostart=false                ; start at supervisord start (default: true)
startretries=0                 ; never retry starting the service
startsecs=3                    ; rough estimate of how long initial boot takes
stopwaitsecs=2                 ; estimated time to shutdown before forcing a SIGKILL
stopasgroup=true               ; send stop signal to the UNIX process group (default false)
killasgroup=true               ; SIGKILL the UNIX process group (def false)

[program:mcsn_web]
command=yarn serve             ; the program (relative uses PATH, can take args)
directory=../mcsn_web          ; directory to cwd to before exec (def no cwd)
autostart=false                ; start at supervisord start (default: true)
startretries=0                 ; never retry starting the service
startsecs=5                    ; rough estimate of how long initial boot takes
stopwaitsecs=2                 ; estimated time to shutdown before forcing a SIGKILL
stopasgroup=true               ; send stop signal to the UNIX process group (default false)
killasgroup=true               ; SIGKILL the UNIX process group (def false)


; When adding a new program, use this template and keep all of the values
; set here (unless specifically needed otherwise).
;[program:<program_name>]
; command=<the command>          ; the program (relative uses PATH, can take args)
; directory=<service directory>  ; directory to cwd to before exec (def no cwd)
; autostart=false                ; start at supervisord start (default: true)
; startretries=0                 ; never retry starting the service
; startsecs=<seconds>            ; rough estimate of how long initial boot takes
; stopwaitsecs=2                 ; estimated time to shutdown before forcing a SIGKILL
; stopasgroup=true               ; send stop signal to the UNIX process group (default false)
; killasgroup=true               ; SIGKILL the UNIX process group (def false)


; `mcsn_basic` is the set of services necessary for running the site at all.
; This will most likely only ever include `web` and `api`.
[group:mcsn_basic]
programs=mcsn_web,mcsn_api

; `mcsn_aux` is the rest of the services that users interact with, but that are
; not required to have a working site.
[group:mcsn_aux]
programs=mcsn_runs
